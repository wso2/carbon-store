<%
/*
 *  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
var caramel;
require('/modules/store.js').exec(function(ctx) {
    caramel = require('caramel');
    var tenantApi = require('/modules/tenant-api.js').api;
    var ratingApi = require('/modules/rating-api.js').api;
    var app = require('rxt').app;
    var constants = require('rxt').constants;
    var asset = require('rxt').asset;
    var core = require('rxt').core;
    var constants = require('rxt').constants;
    var am;
    var server = require('store').server;
    var user = server.current(ctx.session);
    var ui = require('rxt').ui;
    var page = ui.buildPage(ctx.session, ctx.request);
    var appManager;
    var rxtManager;
    var appResources = tenantApi.createTenantAwareAppResources(ctx.session);
    appManager = appResources.appManager;
    //appManager = app.createUserAppManager(ctx.session);
    //tenanId = user.tenantId;
    tenantId = appResources.context.tenantId;
    rxtManager = core.rxtManager(tenantId);
    var type;
    var availableAssetTypes = rxtManager.listRxtTypes();
    var assets = {};
    var subs;
    //Subscriptions should not be retrieved if the user
    //is accessing a cross tenant view
    if (!appResources.context.isAnonContext) {
        for (var index in availableAssetTypes) {
            type = availableAssetTypes[index];
            am = asset.createUserAssetManager(ctx.session, type);
            //Get all of the subscriptions for the current asset type
            subs = am.subscriptions(ctx.session);
            //Only create an entry if there are any subscriptions
            if (subs.length > 0) {
                ratingApi.addRatings(subs, am, context.tenantId, context.username);
                assets[type] = {};
                assets[type].assets = subs;
                assets[type].meta = rxtManager.getRxtTypeDetails(type);
            }
        }
    }
    var output = appManager.render(assets, page);
    caramel.render(output);
}, request, response, session); %>