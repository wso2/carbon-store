<%
/*
 *  Copyright (c) 2005-2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *  WSO2 Inc. licenses this file to you under the Apache License,
 *  Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */
var caramel;
require('/modules/publisher.js').exec(function(ctx) {
    caramel = require('caramel');
    var ui = require('rxt').ui;
    var asset = require('rxt').asset;
    var uriMatcher = new URIMatcher(ctx.request.getRequestURI());
    var options = uriMatcher.match('/{context}/assets/{type}/{pageName}/{+id}')||uriMatcher.match('/{context}/assets/{type}/{pageName}');

    if(!options){
        response.sendError(400,'Could not locate an endpoint for your request.Make sure that you provide an id');
    }
    else if (!options.id) {
        response.sendError(400, 'An id must be provided when deleting a particular asset');
    } else {
        var type = options.type;
        var am = asset.createUserAssetManager(session, type);
        var page = ui.buildPage(session, request);
        var assets = am.get(options.id);
        if (assets == null) {
            response.sendError(404, 'The asset with id: ' + options.id + ' could not be located.');
        } else {
            //print(assets);
            var output = am.render(assets, page).details();
            caramel.render(output);
        }
    }
}, request, response, session); %>